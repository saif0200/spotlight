language: rust

rust:
  - stable

os:
  - linux
  - windows
  - osx

branches:
  only:
    - main

env:
  global:
    - NODE_VERSION=20

before_install:
  - |-
    case $TRAVIS_OS_NAME in
      linux)
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        ;;
      windows)
        choco install nodejs --version=$NODE_VERSION
        export PATH="/c/Program Files/nodejs:$PATH"
        ;;
      osx)
        brew install node@20
        export PATH="/usr/local/opt/node@20/bin:$PATH"
        ;;
    esac

install:
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
  - export PATH="$HOME/.cargo/bin:$PATH"
  - npm install

script:
  - |-
    case $TRAVIS_OS_NAME in
      linux)
        # Skip Linux build for now (focus on Windows and macOS)
        ;;
      windows)
        npm run tauri build
        ;;
      osx)
        if [ "$(uname -m)" = "x86_64" ]; then
          npm run tauri build -- --target x86_64-apple-darwin
        else
          npm run tauri build -- --target aarch64-apple-darwin
        fi
        ;;
    esac

deploy:
  provider: releases
  api_key:
    secure: $GITHUB_TOKEN
  file_glob: true
  file:
    - src-tauri/target/release/bundle/nsis/*.exe
    - src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
    - src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
    - latest.json
  skip_cleanup: true
  on:
    tags: true
    condition: $TRAVIS_OS_NAME = linux